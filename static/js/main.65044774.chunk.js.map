{"version":3,"sources":["components/api/api.js","components/imageFinder/searchbar/SearchbarStyled.js","components/imageFinder/searchbar/Searchbar.js","components/imageFinder/imageGallery/imageGalleryItem/ImageGalleryItem.js","components/imageFinder/imageGallery/ImageGallery.js","components/imageFinder/loaderDots/LoaderDots.js","components/imageFinder/button/Button.js","components/imageFinder/modal/Modal.js","components/imageFinder/ImageFinder.js","components/App.js","index.js"],"names":["findPictures","value","a","page","key","axios","get","response","data","hits","Header","styled","header","Searchbar","searchByValue","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","type","placeholder","onChange","target","Li","li","ImageGalleryItem","image","webformatURL","largeImageURL","setModalImgUrl","src","alt","data-large","onClick","dataset","large","Ul","ul","ImageGallery","images","map","id","Div","div","LoaderDots","color","height","width","timeout","LoadMoreButton","button","Button","searchNexPage","Modal","url","nodeName","ImageFinder","searchValue","isLoading","modalImgUrl","state","setState","prevState","then","finded","length","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.65044774.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst findPictures = async (value, page = 1) => {\r\n    const key = \"19499543-c5c990c94d79b3fdb7962cf6a\";\r\n    const response = await axios.get(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${value}&page=${page}&per_page=12&key=${key}`);\r\n    return response.data.hits;\r\n};\r\n\r\nexport default findPictures;\r\n","import styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    top: 0;\r\n    left: 0;\r\n    position: sticky;\r\n    z-index: 1100;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 64px;\r\n    padding-right: 24px;\r\n    padding-left: 24px;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    .SearchForm {\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        max-width: 600px;\r\n        background-color: #fff;\r\n        border-radius: 3px;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .SearchForm-button {\r\n        display: inline-block;\r\n        width: 48px;\r\n        height: 48px;\r\n        border: 0;\r\n        background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\r\n        background-size: 40%;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n        opacity: 0.6;\r\n        transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n        cursor: pointer;\r\n        outline: none;\r\n    }\r\n\r\n    .SearchForm-button:hover {\r\n        opacity: 1;\r\n    }\r\n\r\n    .SearchForm-button-label {\r\n        position: absolute;\r\n        width: 1px;\r\n        height: 1px;\r\n        padding: 0;\r\n        overflow: hidden;\r\n        clip: rect(0, 0, 0, 0);\r\n        white-space: nowrap;\r\n        clip-path: inset(50%);\r\n        border: 0;\r\n    }\r\n\r\n    .SearchForm-input {\r\n        display: inline-block;\r\n        width: 100%;\r\n        font: inherit;\r\n        font-size: 20px;\r\n        border: none;\r\n        outline: none;\r\n        padding-left: 4px;\r\n        padding-right: 4px;\r\n    }\r\n\r\n    .SearchForm-input::placeholder {\r\n        font: inherit;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nexport default Header;\r\n","import React, {useState} from \"react\";\r\nimport Header from \"./SearchbarStyled\";\r\n\r\nconst Searchbar = ({searchByValue}) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        inputValue && searchByValue(inputValue);\r\n    };\r\n\r\n    const inputHandler = e => setInputValue(e.target.value);\r\n\r\n    return (\r\n        <Header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={submitHandler}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n                <input className=\"SearchForm-input\" type=\"text\" placeholder=\"Search images and photos\" value={inputValue} onChange={inputHandler} />\r\n            </form>\r\n        </Header>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","import styled from \"styled-components\";\r\n\r\nconst Li = styled.li`\r\n    border-radius: 2px;\r\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n\r\n    .ImageGalleryItem-image {\r\n        width: 100%;\r\n        height: 260px;\r\n        object-fit: cover;\r\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    }\r\n\r\n    .ImageGalleryItem-image:hover {\r\n        transform: scale(1.03);\r\n        cursor: zoom-in;\r\n    }\r\n`;\r\n\r\nconst ImageGalleryItem = ({image: {webformatURL, largeImageURL}, setModalImgUrl}) => {\r\n    const imgClickHandler = e => {\r\n        setModalImgUrl(e.target.dataset.large);\r\n    };\r\n\r\n    return (\r\n        <Li className=\"ImageGalleryItem\">\r\n            <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" data-large={largeImageURL} onClick={imgClickHandler} />\r\n        </Li>\r\n    );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import styled from \"styled-components\";\r\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\r\n\r\nconst Ul = styled.ul`\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n`;\r\n\r\nconst ImageGallery = ({images, setModalImgUrl}) => {\r\n    return (\r\n        <Ul className=\"ImageGallery\">\r\n            {images.map(image => (\r\n                <ImageGalleryItem key={image.id} image={image} setModalImgUrl={setModalImgUrl} />\r\n            ))}\r\n        </Ul>\r\n    );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import Loader from \"react-loader-spinner\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Div = styled.div`\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst LoaderDots = () => {\r\n    return (\r\n        <Div>\r\n            <Loader className=\"loader\" type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} timeout={3000} />\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default LoaderDots;\r\n","import styled from \"styled-components\";\r\n\r\nconst LoadMoreButton = styled.button`\r\n    padding: 8px 16px;\r\n    margin: 0 auto;\r\n    border-radius: 2px;\r\n    background-color: #3f51b5;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    text-align: center;\r\n    display: inline-block;\r\n    color: #fff;\r\n    border: 0;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    max-width: 180px;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    &&:hover,\r\n    &&:focus {\r\n        background-color: #303f9f;\r\n    }\r\n`;\r\n\r\nconst Button = ({searchNexPage}) => {\r\n    return (\r\n        <LoadMoreButton type=\"button\" onClick={searchNexPage}>\r\n            Load more\r\n        </LoadMoreButton>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst Div = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    z-index: 1200;\r\n\r\n    .Modal {\r\n        max-width: calc(100vw - 48px);\r\n        max-height: calc(100vh - 24px);\r\n    }\r\n`;\r\n\r\nconst Modal = ({url, setModalImgUrl}) => {\r\n    const closeImg = e => {\r\n        e.target.nodeName !== \"IMG\" && setModalImgUrl(\"\");\r\n    };\r\n\r\n    return (\r\n        <Div className=\"Overlay\" onClick={closeImg}>\r\n            <div className=\"Modal\">\r\n                <img src={url} alt=\"\" />\r\n            </div>\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport findPictures from \"../api/api\";\r\n\r\nimport Searchbar from \"./searchbar/Searchbar\";\r\nimport ImageGallery from \"./imageGallery/ImageGallery\";\r\nimport LoaderDots from \"./loaderDots/LoaderDots\";\r\nimport Button from \"./button/Button\";\r\nimport Modal from \"./modal/Modal\";\r\n\r\nconst Div = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 16px;\r\n    padding-bottom: 24px;\r\n`;\r\n\r\nconst ImageFinder = () => {\r\n    const [state, setState] = useState({\r\n        searchValue: \"\",\r\n        images: [],\r\n        page: 1,\r\n        isLoading: false,\r\n        modalImgUrl: \"\",\r\n    });\r\n\r\n    const setModalImgUrl = url => {\r\n        setState(prevState => ({...prevState, modalImgUrl: url}));\r\n    };\r\n\r\n    const searchNexPage = () => {\r\n        setState(prevState => ({...prevState, isLoading: true}));\r\n        state.page = state.page + 1;\r\n        findPictures(state.searchValue, state.page)\r\n            .then(finded => {\r\n                setState(prevState => ({...prevState, images: [...prevState.images, ...finded], isLoading: false}));\r\n            })\r\n            .finally(() => {\r\n                window.scrollTo({\r\n                    top: document.documentElement.scrollHeight,\r\n                    behavior: \"smooth\",\r\n                });\r\n            });\r\n    };\r\n\r\n    const searchByValue = value => {\r\n        if (state.searchValue !== value) {\r\n            state.searchValue = value;\r\n            findPictures(state.searchValue).then(finded => {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    images: [...finded],\r\n                    page: 1,\r\n                }));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Div>\r\n            <Searchbar searchByValue={searchByValue} />\r\n            {state.images.length > 0 && <ImageGallery images={state.images} setModalImgUrl={setModalImgUrl} />}\r\n            {state.isLoading && <LoaderDots />}\r\n            {state.images.length > 0 && <Button searchNexPage={searchNexPage} />}\r\n            {state.modalImgUrl.length > 0 && <Modal url={state.modalImgUrl} setModalImgUrl={setModalImgUrl} />}\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default ImageFinder;\r\n","import React from \"react\";\r\nimport ImageFinder from \"./imageFinder/ImageFinder\";\r\n\r\n// slr - стрелочная с дефолтным экспортом\r\n// rafc - стрелочная с именованым экспортом\r\n\r\nconst App = () => {\r\n    return <ImageFinder />;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}